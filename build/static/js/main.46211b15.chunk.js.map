{"version":3,"sources":["services/axios.js","constants/userConstants.js","LoadingBox.js","MessageBox.js","pages/Login.js","actions/userActions.js","components/Note.js","pages/Register.js","services/data.js","pages/Home.js","MenuBar.js","constants/companyConstants.js","actions/companyActions.js","pages/Dashboard.js","PrivateRoute.js","Company.js","pages/Internship.js","Footer.js","App.js","reportWebVitals.js","store.js","reducers/userReducers.js","reducers/companyReducers.js","index.js"],"names":["instance","axios","create","baseURL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_SIGNUP_REQUEST","USER_SIGNUP_SUCCESS","USER_SIGNUP_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAIL","LoadingBox","className","MessageBox","props","variant","children","Login","useState","email","setEmail","password","setPassword","dispatch","useDispatch","userLogin","useSelector","state","loading","error","userInfo","useEffect","history","push","Grid","centered","columns","Column","width","Header","as","textAlign","Segment","Form","onSubmit","e","preventDefault","a","type","payload","Axios","post","data","localStorage","setItem","JSON","stringify","response","message","login","Input","fluid","icon","iconPosition","placeholder","value","onChange","target","required","Button","color","size","disabled","to","Note","Register","ploading","setPloading","perror","firstName","setFirstName","lastName","setLastName","userName","setUserName","phone","setPhone","gender","setGender","profileImage","setProfileImage","scope","setScope","Submit","sents","console","log","style","label","name","onSelect","files","compact","background","cards","id","image","_id","Home","userList","map","card","alt","src","MenuBar","activeItem","Menu","secondary","pointing","Item","Image","Link","rounded","position","active","onClick","removeItem","COMPANY_LIST_REQUEST","COMPANY_LIST_SUCCESS","COMPANY_LIST_FAIL","CREATE_COMPANY_REQUEST","CREATE_COMPANY_SUCCESS","CREATE_COMPANY_FAIL","COMPANY_DETAILS_REQUEST","COMPANY_DETAILS_SUCCESS","COMPANY_DETAILS_FAIL","listCompanies","Instance","get","Dashboard","facebook","setFacebook","linkedIn","setLinkedIn","twitter","setTwitter","setName","industry","setIndustry","companyData","setCompanyData","location","setLocation","titleOfIntern","setTitleOfIntern","fieldOfStudy","setFieldOfStudy","responsibilities","setResponsibilities","termsOfEngagement","setTermsOfEngagement","stipend","setStipend","participatoryMode","setParticipatoryMode","company","companyInfo","column","companyCreate","Field","control","content","PrivateRoute","Component","component","rest","render","Company","title","price","description","Internship","companyList","companies","Footer","App","Container","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","getItem","parse","reducer","combineReducers","action","userSignup","pUserInfo","userUpdate","updatedUserInfo","getUser","laoding","companyDetails","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46211b15.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    //baseURL : \"http://localhost:4000\",\r\n    baseURL: \"https://i-a-mern.herokuapp.com\",\r\n});\r\n\r\nexport default instance;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\n\r\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\n\r\nexport const USER_SIGNUP_REQUEST = 'USER_SIGNUP_REQUEST';\r\nexport const USER_SIGNUP_SUCCESS = 'USER_SIGNUP_SUCCESS';\r\nexport const USER_SIGNUP_FAIL = 'USER_SIGNUP_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\n\r\n\r\nexport const GET_USER_REQUEST = 'GET_USER_REQUEST';\r\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\r\nexport const GET_USER_FAIL = 'GET_USER_FAIL';\r\n","import React from 'react'\r\n\r\nexport default function LoadingBox() {\r\n    return (\r\n        <div>\r\n            <i className=\"fa fa-spinner fa-spin\"></i> Loading...\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function MessageBox(props) {\r\n\r\n    return (\r\n        <div className={`alert alert-${props.variant || 'info'}`}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Message,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport { login} from '../actions/userActions';\r\nimport LoadingBox from '../LoadingBox';\r\nimport MessageBox from '../MessageBox';\r\n\r\nimport './Login.css';\r\n\r\n\r\n\r\n\r\nfunction Login(props) {\r\n    \r\n    \r\n   // const [ploading, setPLoading] = useState(false);\r\n    // const [perror, setPerror] = useState(false);\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n\r\n\r\n    const loginHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password));\r\n        setEmail('');\r\n        setPassword('')\r\n \r\n        }\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            //console.log(userInfo.user.firstName);\r\n        props.history.push('/dashboard');     \r\n            } \r\n        }, [userInfo])\r\n    \r\n       \r\n              \r\n\r\nreturn (\r\n    \r\n     <div>\r\n         <Grid centered columns={2} >\r\n            <Grid.Column width={13}>\r\n                <Header as=\"h2\" textAlign=\"center\">Login</Header>\r\n               \r\n                {loading && <LoadingBox />}\r\n                {error && <MessageBox>{error}</MessageBox>}\r\n              \r\n                <Segment >\r\n\r\n                    <Form  onSubmit={loginHandler} centered >\r\n                        <Form.Input\r\n                            fluid\r\n                            icon=\"user\"\r\n                            iconPosition=\"left\"\r\n                            placeholder=\"Email address\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n                        <Form.Input\r\n                            fluid\r\n                            icon=\"lock\"\r\n                            iconPosition=\"left\"\r\n                            placeholder=\"Password\"\r\n                            \r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n\r\n                        <Button color=\"black\"   type='submit' fluid size=\"large\" disabled={loading}>Login</Button>\r\n                    \r\n                    </Form>\r\n                    <br />\r\n                   <p>New to Internapp ? <Link to= '/signup'>Create an Account</Link></p> \r\n                         </Segment>\r\n                   \r\n                    \r\n            </Grid.Column>\r\n                \r\n        </Grid>\r\n        <hr />\r\n        <br/>\r\n        <div width={13}>\r\n             <h3>How to reach us:</h3>\r\n            <p>\r\n            Mobile {' '} +234 810 776 6889<br/>\r\n            Email - <Link>info@internapp.co</Link>\r\n            </p>\r\n\r\n        </div>\r\n    </div>\r\n    );\r\n\r\n}\r\nexport default Login","import Axios from '../services/axios';\r\nimport {\r\n    GET_USER_FAIL, GET_USER_REQUEST, GET_USER_SUCCESS,\r\n    USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS,\r\n    USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_SIGNUP_FAIL, USER_SIGNUP_REQUEST, USER_SIGNUP_SUCCESS,\r\n    USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: USER_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.get('/user/');\r\n        \r\n        dispatch({ type: USER_LIST_SUCCESS, payload: data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n        \r\n        \r\n        \r\n    } catch (error) {\r\n        dispatch({ type: USER_LIST_FAIL, payload: error.message });\r\n        \r\n    }\r\n};\r\n\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_LOGIN_REQUEST, payload: { email, password } });\r\n    try {\r\n        const { data } = await Axios.post('/user/login', { email, password });\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message : error.message,\r\n        });       \r\n    }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({ type: USER_LOGOUT });\r\n};\r\n \r\nexport const signup = (firstName, lastName, email, userName, phone, gender, password, profileImage, scope) =>\r\n    async (dispatch) => {\r\n        dispatch({ type: USER_SIGNUP_REQUEST, payload: { firstName, lastName, email, userName, phone, gender, password, profileImage, scope } });\r\n        try {\r\n            const { data } = await Axios.post('/user/signup', { firstName, lastName, email, userName, phone, gender, password, profileImage, scope });\r\n            dispatch({ type: USER_SIGNUP_SUCCESS, payload: data });\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_SIGNUP_FAIL,\r\n                payload: \r\n                    error.response && error.response.data.message ? error.response.data.message : error.message\r\n            })\r\n            \r\n        }\r\n    }\r\n  \r\nexport const userUpdate = (firstName, middleName, lastName, userName, phone,\r\n    email, gender, profileImage, facebook, linkedIn, twitter\r\n) =>\r\n    async (dispatch) => {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST, payload: {\r\n                firstName, middleName, lastName, userName, phone,\r\n                email, gender, profileImage, facebook, linkedIn, twitter\r\n            }\r\n        })\r\n        try {\r\n            const { data } = await Axios.patch(`/user/$:user_id`, {\r\n                firstName, middleName, lastName, userName, phone,\r\n                email, gender, profileImage, facebook, linkedIn, twitter\r\n            })\r\n            dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_UPDATE_FAIL,\r\n                payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n            })\r\n        }\r\n    };\r\n\r\n\r\nexport const getUser = (email, password) => async (dispatch) => {\r\n    dispatch({\r\n        type: GET_USER_REQUEST\r\n    });\r\n\r\n    try {\r\n        const { data } = await Axios.get('/user/:user_id', { email, password });\r\n        dispatch({ type: GET_USER_SUCCESS, payload: data });\r\n        localStorage.setItem('companyInfo', JSON.stringify(data));\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_USER_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport './Note.css';\r\n\r\nexport default function Note() {\r\n    return (\r\n        <div className='note' >\r\n            <h3 ><strong>NOTE: Your internship/work experience position must be a paid position.</strong></h3>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Segment, Grid, Button, Header } from 'semantic-ui-react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { signup } from '../actions/userActions'\r\nimport './Register.css';\r\nimport LoadingBox from '../LoadingBox';\r\n\r\nimport MessageBox from '../MessageBox';\r\nimport Axios from '../services/axios';\r\nimport instance from '../services/axios';\r\n\r\nimport './Register.css';\r\nimport Note from '../components/Note';\r\n\r\nfunction Register(props) {\r\n\r\n    \r\n    const [ploading, setPloading] = useState(false);\r\n    const [perror, setPerror] = useState(false);\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [userName, setUserName] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [gender, setGender] = useState('Male')\r\n    const [password, setPassword] = useState('')\r\n    const [profileImage, setProfileImage] = useState()\r\n    const [scope, setScope] = useState('Basic')\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    const Submit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const sents = await instance.post(\"/user/signup\", { firstName, lastName ,email ,userName ,phone, gender ,password, profileImage, scope });         \r\n        console.log(\"here's sent\",sents);\r\n        setPloading(true);\r\n        if (sents) {\r\n            \r\n        props.history.push('/emailsent')\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        < div className='register'> \r\n            <h1 style={{textAlign:'center'}}>Internapp Africa partner Onboarding</h1>\r\n            <Note />\r\n            <br/>\r\n                <Grid centered  columns={2} >\r\n                    <Grid.Column width={13}>\r\n                       <Segment>       \r\n            \r\n            {ploading ? (<LoadingBox />)\r\n                : perror ? (<MessageBox>{perror}</MessageBox>)\r\n                    : (\r\n                            <Form  onSubmit={Submit}  >\r\n                                \r\n                                <Header as=\"h2\" textAlign=\"center\"> Create an Account </Header>\r\n                                \r\n                                    \r\n                                <Form.Input\r\n                                    label='First Name'\r\n                                    placeholder='First Name...'\r\n                                    name='firstName'\r\n                                    value={firstName}\r\n                                    onChange={(e) => setFirstName(e.target.value)}\r\n                                    required\r\n                                />\r\n        \r\n                                            \r\n                                <Form.Input\r\n                                    label='Last Name'\r\n                                    placeholder='Last Name...'\r\n                                    name='lastName'\r\n                                    value={lastName}\r\n                                    onChange={(e) => setLastName(e.target.value)}\r\n                                    required\r\n                                />\r\n                            \r\n        \r\n                                <Form.Input\r\n                                    label='Email'\r\n                                    placeholder='Please enter a valid email address'\r\n                                    name='email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    required\r\n                                />\r\n        \r\n                                <Form.Input\r\n                                    label='Username'\r\n                                    placeholder='Username...'\r\n                                    name='userName'\r\n                                    value={userName}\r\n                                    onChange={(e) => setUserName(e.target.value)}\r\n                                    required\r\n                                />\r\n        \r\n                                \r\n                                <Form.Input\r\n                                    label='Phone'\r\n                                    placeholder='Phone...'\r\n                                    name='phone'\r\n                                    value={phone}\r\n                                    onChange={(e) => setPhone(e.target.value)}\r\n                                    required\r\n                                />\r\n                                \r\n                                \r\n                            \r\n                                <div className=\"field\">\r\n                                    <label>Gender</label>\r\n                                    <select onSelect={(e)=> setGender(e.target.value)} className=\"ui fluid dropdown\">\r\n                                       \r\n                                        <option value=\"MA\">Male</option>\r\n                                        <option value=\"FE\">Female</option>\r\n                                    </select>\r\n                                </div>\r\n                                <Form.Input\r\n                                    label='Password'\r\n                                    placeholder='Password...'\r\n                                    name='password'\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    required\r\n                                />\r\n                                \r\n                                <Form.Input\r\n                                    label='ProfileImage'\r\n                                    type='file'\r\n                                placeholder='ProfileImage...'\r\n                                name='profileImage'\r\n                                value={profileImage}\r\n                                onChange={(e) => setProfileImage(e.target.files)}\r\n                                \r\n                                />\r\n                                \r\n                                \r\n                                <div className=\"field\">\r\n                                    <label>Scope</label>\r\n                                    <select onChange={(e)=> setScope(e.target.value)} className=\"ui fluid dropdown\">\r\n                                       <option value=\"MA\">Basic</option>  \r\n                                    </select>\r\n                                </div>\r\n                                        \r\n                                                            \r\n                                <Button type='submit' fluid compact style={{background : ploading ?' #ccc' : \"black\"}}  size=\"medium\">\r\n                                            Create an Account\r\n                                </Button>\r\n                                \r\n                            </Form> \r\n                      \r\n                                )}\r\n                          </Segment>\r\n                    </Grid.Column>\r\n                </Grid>\r\n           \r\n            \r\n        </div>\r\n        \r\n    )\r\n    \r\n}\r\n\r\nexport default Register","const data = {\r\n    cards: [\r\n        {\r\n            id: 0,\r\n            name: \"global startUp\",\r\n            image: './images/global.jpg'\r\n        },\r\n        {\r\n            id: 1,\r\n            name: \"ituari\",\r\n            image: './images/itua.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"mozilla builders\",\r\n            image: './images/moz.jpg'\r\n        },\r\n        {\r\n            _id: \"4\",\r\n            name: \"itumagnet\",\r\n            image: \"./images/itu.jpg\"\r\n        }\r\n    ]\r\n};\r\n\r\nexport default data;","import React from \"react\";\r\n\r\nimport \"./Home.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//import { listUsers } from \"../actions/userActions\";\r\n//import { listCompanies } from \"../actions/companyActions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport data from '../services/data';\r\n\r\nfunction Home() {\r\n  //const dispatch = useDispatch();\r\n  const userList = useSelector((state) => state.userList);\r\n\r\n  //const { loading, error, userInfo } = userList;\r\n\r\n  console.log(\"this is\" + userList);\r\n\r\n  /*\r\n    useEffect(() => {\r\n        dispatch(listUsers());\r\n    }, [dispatch]);\r\n*/\r\n\r\n  /* useEffect(() => {\r\n      dispatch(listCompanies());\r\n    }, [dispatch]);\r\n     */\r\n  return (\r\n    <div className=\"home\">\r\n      <h2>We are a technology startup that connects young African talents to leading\r\n      companies and organizations globally for career development.</h2>\r\n      <br/>\r\n      <div className=\"home_top\">\r\n        \r\n      <h4>What we do:</h4><br/>\r\n        <p className=\"\">\r\n          \r\n          We spend time to identify some of the key challenges our partner companies\r\n          face including ones that are Covid-19 induced, and twice a year we organize\r\n          a case competition infrastructure based on the identified problems ranging\r\n          from sciences to humanities. Here, undergraduate and postgraduate\r\n          students will have to submit their abstracts to enter the competition and the\r\n          THREE (3) winning solutions that are useful to our partners gets published,\r\n          and rewarded with cash gifts.\r\n        </p>\r\n        {/* <img src=\"./images/dImg.jpg\" alt='display' /> */}\r\n      </div>\r\n\r\n      <div className='home_mid'>\r\n        <br/>\r\n        <h4>Who we want:</h4>\r\n        <p >\r\n        Leading companies and organizations across all sectors who:\r\n\r\n\r\n          <ul>\r\n            <li>Want to add young African talents to their organizations on a paid internship position.</li>\r\n            <li>\r\n              Can pay their undergraduate interns $100 or more and $300 or more for their postgraduate interns (young professionals) as and when due.\r\n            </li>\r\n            \r\n            <li>Are domiciled in any part of the world. </li>\r\n          </ul>\r\n        </p>\r\n        <h4>How it works:</h4>\r\n        <p>\r\n        Click <Link className='link' to=\"/signup\">here</Link> to publish your internship openings with us and state clearly the\r\n        number of positions available. Once you sign up, we will contact you to find\r\n        out some of the challenges you are facing and how we can help. \r\n        \r\n        </p>\r\n        \r\n      </div>\r\n      <div className=\"home_img\">\r\n      \r\n        <h3>Featured Programs</h3>\r\n        <div >\r\n        {data.cards.map((card) => (\r\n          <div key={card._id}>\r\n            <img className=\"img_mid\" alt={card.name} src={card.image} />\r\n          </div>\r\n        ))}\r\n        </div>\r\n          \r\n      </div>\r\n      <div className=\"bt\">\r\n      <h4>What we want to achieve: </h4>\r\n      <ul>\r\n        <li>To improve employability</li>\r\n        <li>Instill research readiness in students</li>\r\n        <li>Develop their leadership skills</li>\r\n        <li>To foster the culture of building valuable connections</li>\r\n        <li>To bridge the gap between academia and industry</li>\r\n        <li>Provide access to decent work experience opportunities</li>\r\n\r\n      </ul>\r\n      </div>\r\n      \r\n      <div className=\"home_base\">\r\n        <h3>How to reach us:</h3>\r\n        <p>\r\n          Mobile - +234 810 776 6889<br/>\r\n          Email - <Link>info@internapp.co</Link>\r\n        </p>\r\n\r\n        \r\n      </div>\r\n\r\n                {/*\r\n          {userList === undefined ? (\r\n              <>\r\n              <div className='chart'>\r\n                  <PieChart data={[[\"Number of Accepted Applications\", 44], [\"Number of Rejected Applications\", 23],]} />\r\n              </div>\r\n\r\n            <div className='banner'>\r\n                <h1>This section holds the banner</h1>\r\n                  </div>\r\n                  </>\r\n          )\r\n              :\r\n              (\r\n                  <>         \r\n                      <h1>there are users</h1>\r\n                  \r\n          <div className='chart'>\r\n          <PieChart data={[[\"Number of Accepted Applications\", 44], [\"Number of Rejected Applications\", 23],]} />\r\n          </div>\r\n\r\n          <div className='banner'>\r\n              <h1>This section holds the banner</h1>\r\n          </div>\r\n\r\n                </>)}\r\n          */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Container, Image, Menu } from 'semantic-ui-react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from './actions/userActions';\r\n\r\nimport './MenuBar.css';\r\n\r\nfunction MenuBar(props) {\r\n  const [activeItem, setActiveItem] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n   const { loading, error, userInfo } = userLogin;\r\n\r\n\r\n  \r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    \r\n    props.history.push('/');\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n      <Menu secondary pointing>\r\n        <Menu.Item>\r\n          <Image\r\n            size=\"tiny\"\r\n            src=\"/images/ia.jpg\"\r\n            alt=\"Logo\"\r\n            as={Link}\r\n            to=\"/\"\r\n            rounded\r\n          />\r\n        </Menu.Item>\r\n\r\n        <Menu.Menu position=\"right\">\r\n          {!userInfo? (\r\n            <>\r\n              \r\n              <Menu.Item\r\n                name=\"internships\"\r\n                active={activeItem === \"internships\"}\r\n                as={Link}\r\n                to=\"/internships\"\r\n              />\r\n\r\n              \r\n              <Menu.Item\r\n                name=\"login\"\r\n                active={activeItem === \"login\"}\r\n                as={Link}\r\n                to=\"/login\"\r\n                color=\"blue\"\r\n              />\r\n\r\n            </>\r\n          ) : (\r\n              <>\r\n                \r\n              <Menu.Item\r\n                name=\"internships\"\r\n                active={activeItem === \"internships\"}\r\n                as={Link}\r\n                to=\"/internships\"\r\n              />\r\n              <Menu.Item name=\"dashboard\" as={Link} to=\"/dashboard\" />\r\n                \r\n              <Menu.Item\r\n                name=\"logout\"\r\n                active={activeItem === \"logout\"}\r\n                  as='button'\r\n                  onClick={logoutHandler}\r\n                \r\n              />\r\n            </>\r\n          )}\r\n        </Menu.Menu>\r\n      </Menu>\r\n  );\r\n}\r\n\r\nexport default MenuBar\r\n","export const COMPANY_LIST_REQUEST = 'COMPANY_LIST_REQUEST';\r\nexport const COMPANY_LIST_SUCCESS = 'COMPANY_LIST_SUCCESS';\r\nexport const COMPANY_LIST_FAIL = 'COMPANY_LIST_FAIL';\r\n\r\n\r\nexport const CREATE_COMPANY_REQUEST = 'CREATE_COMPANY_REQUEST';\r\nexport const CREATE_COMPANY_SUCCESS = 'CREATE_COMPANY_SUCCESS';\r\nexport const CREATE_COMPANY_FAIL = 'CREATE_COMPANY_FAIL';\r\n\r\n\r\n\r\nexport const COMPANY_DETAILS_REQUEST = 'COMPANY_DETAILS_REQUEST';\r\nexport const COMPANY_DETAILS_SUCCESS = 'COMPANY_DETAILS_SUCCESS';\r\nexport const COMPANY_DETAILS_FAIL = 'COMPANY_DETAILS_FAIL';\r\n\r\n\r\n\r\n","import {\r\n    COMPANY_DETAILS_FAIL, COMPANY_DETAILS_REQUEST, COMPANY_DETAILS_SUCCESS,\r\n    COMPANY_LIST_FAIL, COMPANY_LIST_REQUEST, COMPANY_LIST_SUCCESS,\r\n    CREATE_COMPANY_FAIL, CREATE_COMPANY_REQUEST, CREATE_COMPANY_SUCCESS\r\n} from '../constants/companyConstants'\r\n\r\nimport Instance from '../services/axios';\r\n\r\nexport const listCompanies = () => async (dispatch) => {\r\n    dispatch({\r\n        type: COMPANY_LIST_REQUEST\r\n    });\r\n    try {\r\n        const { data } = await Instance.get('/api/company/');\r\n        dispatch({\r\n            type: COMPANY_LIST_SUCCESS, payload: data\r\n        });\r\n        //localStorage.setItem('companyInfo', JSON.stringify(data));\r\n\r\n    } catch (error) {\r\n        dispatch({ type: COMPANY_LIST_FAIL, payload: error.message })\r\n    }\r\n};\r\n\r\n\r\nexport const companyCreate = ( facebook,\r\n    twitter,\r\n    linkedIn,\r\n    name,\r\n    industry,\r\n    companyInfo,\r\n    location,\r\n    titleOfIntern,\r\n    fieldOfStudy,\r\n    responsibilities,\r\n    termsOfEngagement,\r\n    stipend,\r\n    participatoryMode) => async (dispatch) => {\r\n\r\n        dispatch({\r\n            type: CREATE_COMPANY_REQUEST, payload: {\r\n                facebook,\r\n                twitter,\r\n                linkedIn,\r\n                name,\r\n                industry,\r\n                companyInfo,\r\n                location,\r\n                titleOfIntern,\r\n                fieldOfStudy,\r\n                responsibilities,\r\n                termsOfEngagement,\r\n                stipend,\r\n                participatoryMode\r\n            }\r\n        });\r\n    try {\r\n        const { data } = await Instance.post('api/company/', {facebook,\r\n            twitter,\r\n            linkedIn,\r\n            name,\r\n            industry,\r\n            companyInfo,\r\n            location,\r\n            titleOfIntern,\r\n            fieldOfStudy,\r\n            responsibilities,\r\n            termsOfEngagement,\r\n            stipend,\r\n            participatoryMode\r\n                                                            });\r\n        dispatch({ type: CREATE_COMPANY_SUCCESS, payload: data });\r\n        localStorage.setItem('companyInfo', JSON.stringify(data));\r\n\r\n    } catch (error) {\r\n        dispatch({ type: CREATE_COMPANY_FAIL, payload: error.message })\r\n    }\r\n    }\r\n\r\n\r\nexport const companyDetails = (companyId) => async (dispatch) => {\r\n    dispatch({ type: COMPANY_DETAILS_REQUEST, payload: companyId });\r\n    try {\r\n        const { data } = Instance.get(`/api/company/${companyId}`);\r\n        dispatch({ type: COMPANY_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: COMPANY_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        });\r\n    }\r\n};","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Input, Segment, Grid,  Button,  Header } from 'semantic-ui-react';\r\nimport { companyCreate } from '../actions/companyActions';\r\nimport { userUpdate } from '../actions/userActions';\r\nimport Note from '../components/Note';\r\nimport LoadingBox from '../LoadingBox';\r\nimport MessageBox from '../MessageBox';\r\n\r\n\r\nfunction Dashboard(props) {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [middleName, setMiddleName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [userName, setUserName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [facebook, setFacebook] = useState('');\r\n  const [linkedIn, setLinkedIn] = useState('')\r\n  const [twitter, setTwitter] = useState('')\r\n \r\n  const [name, setName] = useState('');\r\n  const [industry, setIndustry] = useState('');\r\n  const [companyData, setCompanyData] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [titleOfIntern, setTitleOfIntern] = useState('');\r\n  const [fieldOfStudy, setFieldOfStudy] = useState('');\r\n  const [responsibilities, setResponsibilities] = useState('');\r\n  const [termsOfEngagement, setTermsOfEngagement] = useState('');\r\n  const [stipend, setStipend] = useState('');\r\n  const [participatoryMode, setParticipatoryMode] = useState('Remote');\r\n  \r\nconst company = useSelector(state => state.company);\r\nconst {loading, error, companyInfo } = company\r\n  const dispatch = useDispatch();\r\n\r\n  const updateUser = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userUpdate());\r\n  }\r\n\r\n  const companyCreateHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(companyCreate(facebook,\r\n      twitter,\r\n      linkedIn,\r\n      name,\r\n      industry,\r\n      companyData,\r\n      location,\r\n      titleOfIntern,\r\n      fieldOfStudy,\r\n      responsibilities,\r\n      termsOfEngagement,\r\n      stipend,\r\n      participatoryMode));\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (companyInfo) {\r\n      \r\n      props.history.push('/internships');\r\n    }\r\n  },[companyInfo])\r\n\r\n\r\n  \r\n  \r\n\r\n    return (\r\n      <>\r\n        <Header as=\"h1\" textAlign=\"center\">\r\n          {\" \"}\r\n          Dashboard{\" \"}\r\n        </Header>\r\n        <div>\r\n          <Grid centered column={2}>\r\n            <Grid.Column>\r\n{/*               <Segment>\r\n                <Form onSubmit={updateUser}>\r\n                  <Header as=\"h4\" textAlign=\"left\">\r\n                    {\" \"}\r\n                    User Profile{\" \"}\r\n                  </Header>\r\n\r\n                  <Form.Group widths=\"equal\">\r\n                    <Form.Field\r\n                      id=\"form-input-control-first-name\"\r\n                      control={Input}\r\n                      label=\"First name\"\r\n                      placeholder=\"First name\"\r\n                      value={firstName}\r\n                      onChange={(e) => setFirstName(e.target.value)}\r\n                    />\r\n                    <Form.Field\r\n                      id=\"form-input-control-middle-name\"\r\n                      control={Input}\r\n                      label=\"Middle name\"\r\n                      placeholder=\"Middle name\"\r\n                      value={middleName}\r\n                      onChange={(e) => setMiddleName(e.target.value)}\r\n                    />\r\n\r\n                    <Form.Field\r\n                      id=\"form-input-control-user-name\"\r\n                      control={Input}\r\n                      label=\"Last name\"\r\n                      placeholder=\"Last name\"\r\n                      value={lastName}\r\n                      onChange={(e) => setLastName(e.target.value)}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Field\r\n                    id=\"form-input-control-user-name\"\r\n                    control={Input}\r\n                    label=\"UserName\"\r\n                    placeholder=\"UserName\"\r\n                    required\r\n                    value={userName}\r\n                    onChange={(e) => setUserName(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Field\r\n                    id=\"form-input-control-error-email\"\r\n                    control={Input}\r\n                    label=\"Email\"\r\n                    placeholder=\"Please enter a valid email address\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Field\r\n                    id=\"form-input-control-phone-number\"\r\n                    control={Input}\r\n                    label=\"Phone Number\"\r\n                    placeholder=\"Please enter a valid phone number\"\r\n                    value={phone}\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Field color='black' disabled={loading} control={Button} content=\"Update Profile\" />\r\n                </Form>\r\n              </Segment>\r\n */}\r\n              \r\n              \r\n              <Note/>\r\n              <Segment>\r\n                \r\n              <Form centered onSubmit={companyCreateHandler} size=\"large\">\r\n                \r\n\r\n                  <Header as=\"h3\" textAlign=\"left\">\r\n                    {\" \"}\r\n                    Company Profile{\" \"}\r\n                  </Header>\r\n                     \r\n                {loading && <LoadingBox />}\r\n                {error && <MessageBox>{error}</MessageBox>}\r\n              \r\n                  <Form.Field\r\n                    id=\"form-input-control-facebook\"\r\n                    control={Input}\r\n                    label=\"Facebook Profile URL\"\r\n                    placeholder=\"Please enter a your Facebook Profile URL\"\r\n                    \r\n                    value={facebook}\r\n                    onChange={(e) => setFacebook(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Field\r\n                    id=\"form-input-control-twitter\"\r\n                    control={Input}\r\n                    label=\"Twitter Profile URL\"\r\n                    placeholder=\"Please enter a your twitter Profile URL\"\r\n                  \r\n                    value={twitter}\r\n                    onChange={(e) => setTwitter(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Field\r\n                    id=\"form-input-control-linkedIn\"\r\n                    control={Input}\r\n                    label=\"LinkedIn Profile URL\"\r\n                    placeholder=\"Please enter a your linkedIn Profile URL\"\r\n                    \r\n                    value={linkedIn}\r\n                    onChange={(e) => setLinkedIn(e.target.value)}\r\n                  />\r\n\r\n                  <Form.Input\r\n                    label=\"Name\"\r\n                    placeholder=\"Enter your Company's Name\"\r\n                    name=\"Name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    required\r\n                  />\r\n\r\n                  <Form.Input\r\n                    label=\"Industry\"\r\n                    placeholder=\"Enter your industry of operation\"\r\n                    name=\"industry\"\r\n                    value={industry}\r\n                    onChange={(e) => setIndustry(e.target.value)}\r\n                    required\r\n                  />\r\n\r\n                  \r\n                  <div className=\"field\">\r\n                    <label>Company Description</label>\r\n                    <textarea\r\n                      value={companyData}\r\n                      onChange={(e) => setCompanyData(e.target.value)}\r\n                      required\r\n                    ></textarea>\r\n                  </div>\r\n\r\n                  \r\n                  <Form.Input\r\n                    label=\"Location\"\r\n                    placeholder=\"Enter your company's location\"\r\n                    name=\"Location\"\r\n                    value={location}\r\n                    onChange={(e) => setLocation(e.target.value)}\r\n                    required\r\n                  />\r\n\r\n                  <Form.Input\r\n                    label=\"Title for Intern\"\r\n                    placeholder=\"Enter the Title for the position\"\r\n                    name=\"Title\"\r\n                    value={titleOfIntern}\r\n                    onChange={(e) => setTitleOfIntern(e.target.value)}\r\n                    required\r\n                  />\r\n\r\n\r\n                  <Form.Input\r\n                    label=\"Field of Study\"\r\n                    placeholder=\"Enter the field of study.\"\r\n                    name=\"field\"\r\n                    value={fieldOfStudy}\r\n                    onChange={(e) => setFieldOfStudy(e.target.value)}\r\n                    required\r\n                  />\r\n\r\n                  <div className=\"field\">\r\n                    <label>Responsibilities</label>\r\n                    <textarea\r\n                      value={responsibilities}\r\n                      onChange={(e) => setResponsibilities(e.target.value)}\r\n                      required\r\n                    ></textarea>\r\n                  </div>\r\n\r\n                  <Form.Input\r\n                    label=\"Terms of Engagement\"\r\n                    placeholder=\"E.g:  3 - 12 months\"\r\n                    name=\"Terms\"\r\n                    value={termsOfEngagement}\r\n                    onChange={(e) => setTermsOfEngagement(e.target.value)}\r\n                    required\r\n                  />\r\n\r\n                  <Form.Input\r\n                    label=\"Stipend (In USD)\"\r\n                    placeholder=\"Enter the Stipend (In USD)\"\r\n                    name=\"stipend\"\r\n                    value={stipend}\r\n                    onChange={(e) => setStipend(e.target.value)}\r\n                    required\r\n                  />\r\n\r\n                  <div className=\"field\">\r\n                    <label>Participatory Mode</label>\r\n                    <select\r\n                      className=\"ui fluid dropdown\"\r\n                      onChange={(e) => setParticipatoryMode(e.target.value)}\r\n                    >\r\n                      <option value={participatoryMode}>Remote</option>\r\n                      <option value={participatoryMode}>On-site</option>\r\n\r\n                      <option value={participatoryMode}>Remote and On-site</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <Form.Field\r\n                    id=\"form-button-control-public\"\r\n                    control={Button}\r\n                    content=\"Post Position\"\r\n                    color=\"black\"\r\n                    centered\r\n                    disabled={loading}\r\n                  />\r\n                </Form>\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}) {\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n   \r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(...props) => \r\n                !userInfo ? (\r\n                    <Component {...props}></Component>\r\n                ) : (\r\n                        <Redirect to='/login' />\r\n                    )}\r\n        ></Route>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Company({id, title, price, location, company, description   }) {\r\n    return (\r\n      <div key={id} className=\"ui link cards\">\r\n        <div className=\"card\">\r\n          <div className=\"content\">\r\n            <Link to={`/internships/${id}`}>\r\n             <div className=\"header\">{title}</div>\r\n\r\n            </Link>\r\n           \r\n            <div className=\"description\">{description}</div>\r\n          </div>\r\n          <div className=\"extra content\">\r\n            <span className=\"right floated\">\r\n              <small>$</small>\r\n              <strong>{price}</strong>\r\n            </span>\r\n            \r\n            <span className='center floated'>{company}</span>\r\n            <br/>\r\n            <span>{location}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listCompanies } from '../actions/companyActions';\r\nimport LoadingBox from '../LoadingBox';\r\nimport MessageBox from '../MessageBox';\r\n\r\nimport Company from '../Company';\r\nimport './Internship.css';\r\n\r\nexport default function Internship() {\r\n    \r\n    const dispatch = useDispatch();\r\n/* \r\n    const [ploading, setPLoading] = useState(false);\r\n    const [perror, setPerror] = useState(false); */\r\n    const companyList = useSelector(state => state.companyList);\r\n    const { loading, error, companies } = companyList;\r\n\r\n/* \r\n    useEffect(() => {\r\n        dispatch(listCompanies());\r\n    }, [dispatch]); */\r\n    \r\n    return (\r\n\r\n        <div className='internship' >  \r\n            {loading ? (<LoadingBox />) \r\n                : error ? (<MessageBox>{error}</MessageBox>)\r\n                    : (\r\n               \r\n                        <div>\r\n                            {companies.map((company) => (     \r\n                             <Company key={company.id}\r\n                                id= {company.id}\r\n                                title= {company.titleOfIntern}\r\n                                    price={company.stipend}\r\n                                    company={company.name}\r\n                                location={company.location}\r\n                    \r\n                             />\r\n                      ) )\r\n                }\r\n            </div> \r\n\r\n\r\n         \r\n            )}\r\n\r\n                               \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p >All rights reserved - Internapp ©2020 </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport Home from \"./pages/Home\";\r\nimport MenuBar from \"./MenuBar\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\n\r\nimport EmailSent from \"./pages/EmailSent\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport Internship from \"./pages/Internship\";\r\nimport Footer from \"./Footer\";\r\nimport { listCompanies } from \"./actions/companyActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  /* const [userData, setUserData] = useState({\r\n    token: undefined,\r\n    user: undefined,\r\n  });\r\n */\r\n  /* useEffect(() => {\r\n    const checkLoggedIn = async () => {\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      if (token === null) {\r\n        localStorage.setItem('auth-token', \"\");\r\n        token = \"\";\r\n      }\r\n\r\n\r\n      const userRes = await Axios.get('/:user_id',\r\n        { headers: { \"x-auth-token\": token } },\r\n      );\r\n      console.log(\"this is the response\" + userRes.data)\r\n      setUserData({\r\n        token,\r\n        user: userRes.data,\r\n      })\r\n    };\r\n    checkLoggedIn();\r\n  }, []) */\r\n\r\n  \r\n  useEffect(() => {\r\n    dispatch(listCompanies());\r\n}, [dispatch, listCompanies]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <div className=\"menubar\">\r\n          <MenuBar />\r\n        </div>\r\n       \r\n        <Container>\r\n          <Switch>\r\n            {/* <Route path='/emailsent' component={EmailSent} /> */}\r\n            <Route  path=\"/login\" component={Login} />\r\n            <Route  path=\"/signup\" component={Register} />\r\n            <Route  path='/internships' component={Internship} />\r\n            <PrivateRoute   path=\"/dashboard\" component={Dashboard} />\r\n            <Route exact path=\"/\" component={Home} />\r\n          </Switch>\r\n          \r\n        </Container>\r\n            \r\n            <Footer />\r\n          \r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware,compose, combineReducers, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { getUserReducer, userListReducer, userLoginReducer, userSignupReducer, userUpdateReducer } from './reducers/userReducers';\r\nimport { companyDetailsReducer, companyListReducer, createCompanyReducer } from './reducers/companyReducers';\r\n\r\n\r\n\r\nconst initialState = \r\n{\r\n    userLogin: {\r\n        userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n    },\r\n    companyList: {\r\n        companies: localStorage.getItem('companies') ? JSON.parse(localStorage.getItem('companies')) : null\r\n    },\r\n}\r\n\r\n\r\nconst reducer = combineReducers({\r\n    userList: userListReducer,\r\n    userLogin: userLoginReducer,\r\n    userSignup: userSignupReducer,\r\n    userUpdate: userUpdateReducer,\r\n    getUser: getUserReducer,\r\n    companyList: companyListReducer,\r\n    company: createCompanyReducer,\r\n    companyDetails: companyDetailsReducer,\r\n\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import {\r\n    GET_USER_FAIL,\r\n    GET_USER_REQUEST,\r\n    GET_USER_SUCCESS,\r\n    USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS,\r\n    USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT,\r\n    USER_SIGNUP_FAIL, USER_SIGNUP_REQUEST, USER_SIGNUP_SUCCESS,\r\n    USER_UPDATE_FAIL,USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userListReducer = (state = { loading: true, userInfo: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true };\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const userSignupReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_SIGNUP_REQUEST:\r\n            return { loading: true };\r\n        case USER_SIGNUP_SUCCESS:\r\n            return { loading: false, pUserInfo: action.payload };\r\n        case USER_SIGNUP_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, updatedUserInfo: action.payload };\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getUserReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GET_USER_REQUEST:\r\n            return { loading: true };\r\n        case GET_USER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case GET_USER_FAIL:\r\n            return { laoding: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    COMPANY_DETAILS_FAIL, COMPANY_DETAILS_REQUEST, COMPANY_DETAILS_SUCCESS,\r\n    COMPANY_LIST_FAIL, COMPANY_LIST_REQUEST, COMPANY_LIST_SUCCESS,\r\n    CREATE_COMPANY_FAIL, CREATE_COMPANY_REQUEST, CREATE_COMPANY_SUCCESS\r\n} from \"../constants/companyConstants\";\r\n\r\nexport const companyListReducer = (state = { companies: [], loading: true}, action) => {\r\n    switch (action.type) {\r\n        case COMPANY_LIST_REQUEST:\r\n            return { loading: true };\r\n        case COMPANY_LIST_SUCCESS:\r\n            return { loading: false, companies: action.payload };\r\n        case COMPANY_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const createCompanyReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CREATE_COMPANY_REQUEST:\r\n            return { loading: true };\r\n        case CREATE_COMPANY_SUCCESS:\r\n            return { loading: false, companyInfo: action.payload };\r\n        case CREATE_COMPANY_FAIL:\r\n            return { laoding: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const companyDetailsReducer = (state = { company: {}, loading: true }, action) => {\r\n    switch (action.type) {\r\n        case COMPANY_DETAILS_REQUEST:\r\n            return { loading: true };\r\n        case COMPANY_DETAILS_SUCCESS:\r\n            return { loading: false, company: action.payload };\r\n        case COMPANY_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store} >\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}